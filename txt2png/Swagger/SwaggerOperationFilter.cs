using System.Collections.Generic;
using Microsoft.OpenApi.Any;
using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace txt2png.Swagger
{
    public class SwaggerOperationFilter : IOperationFilter
    {
        private const string AltText = "Image generated by github.com/3dbrows/txt2png";

        private const string Uri =
            "https://txt2png.azurewebsites.net/txt2png?input=foo%40example.com?background=white";

        private const string ExampleBase64 =
            "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";

        public void Apply(OpenApiOperation operation, OperationFilterContext context)
        {
            operation.Responses.Clear();
            operation.Responses.Add("200", new OpenApiResponse
            {
                Description = "The image in the desired encoding (text/plain or image/png).",
                Content = new Dictionary<string, OpenApiMediaType>
                {
                    {
                        "text/plain", new OpenApiMediaType
                        {
                            Examples = new Dictionary<string, OpenApiExample>
                            {
                                {
                                    "Usage in HTML", new OpenApiExample
                                    {
                                        Description =
                                            "This is how to embed an example Base64-encoded image in HTML. This is not the image you generated above.",
                                        Value = new OpenApiString(
                                            $"<img alt=\"{AltText}\" src=\"data:image/png;base64,{ExampleBase64}\">")
                                    }
                                },
                                {
                                    "Usage in Markdown", new OpenApiExample
                                    {
                                        Description =
                                            "This is how to embed an example Base64-encoded image in Markdown. This is not the image you generated above.",
                                        Value = new OpenApiString(
                                            $"![{AltText}](data:image/png;base64,{ExampleBase64})")
                                    }
                                }
                            }
                        }
                    },
                    {
                        "image/png", new OpenApiMediaType
                        {
                            Examples = new Dictionary<string, OpenApiExample>
                            {
                                {
                                    "Usage in HTML", new OpenApiExample
                                    {
                                        Description =
                                            "This is how to load an example binary image in HTML. This is not the image you generated above.",
                                        Value = new OpenApiString(
                                            $"<img alt=\"{AltText}\" src=\"{Uri}\">")
                                    }
                                },
                                {
                                    "Usage in Markdown", new OpenApiExample
                                    {
                                        Description =
                                            "This is how to load an example binary image in Markdown. This is not the image you generated above.",
                                        Value = new OpenApiString(
                                            $"![{AltText}]({Uri})")
                                    }
                                }
                            }
                        }
                    }
                }
            });
            operation.Responses.Add("400", new OpenApiResponse {Description = "The input was invalid."});
        }
    }
}